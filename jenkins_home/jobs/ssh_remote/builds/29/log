Started by an SCM change
Running as SYSTEM
Building in workspace /var/jenkins_home/workspace/ssh_remote
The recommended git tool is: NONE
using credential 9a8e5cca-d2ee-4f20-858a-e231c62099ab
 > git rev-parse --resolve-git-dir /var/jenkins_home/workspace/ssh_remote/.git # timeout=10
Fetching changes from the remote Git repository
 > git config remote.origin.url http://20.1.190.133:8090/jenkins/maven.git # timeout=10
Fetching upstream changes from http://20.1.190.133:8090/jenkins/maven.git
 > git --version # timeout=10
 > git --version # 'git version 2.30.2'
using GIT_ASKPASS to set credentials 
 > git fetch --tags --force --progress -- http://20.1.190.133:8090/jenkins/maven.git +refs/heads/*:refs/remotes/origin/* # timeout=10
 > git rev-parse refs/remotes/origin/main^{commit} # timeout=10
Checking out Revision cbd6fd41c441731ad3b115621632b6748c620468 (refs/remotes/origin/main)
 > git config core.sparsecheckout # timeout=10
 > git checkout -f cbd6fd41c441731ad3b115621632b6748c620468 # timeout=10
Commit message: "last testing"
 > git rev-list --no-walk 27ba2f998b19ab26247d33aef6ccf574e2eafb04 # timeout=10
[SSH] script:
BUILD_ID="29"
JOB_NAME="ssh_remote"
BUILD_TAG="jenkins-ssh_remote-29"
BUILD_NUMBER="29"

cd /home/jenkins/code

echo "Build number is $BUILD_NUMBER"

echo "Build tag is $BUILD_TAG"

echo "Job name is $JOB_NAME"

echo "Build ID is $BUILD_ID"

export BUILD_TAG=$BUILD_TAG

export BUILD_NUMBER=$BUILD_NUMBER

echo "this is the  $JOB_NAME and this is it is  $BUILD_TAG"

./automate.sh

[SSH] executing...
Cloning into 'maven'...
Build number is 29
Build tag is jenkins-ssh_remote-29
Job name is ssh_remote
Build ID is 29
this is the  ssh_remote and this is it is  jenkins-ssh_remote-29
*****************************
******Building Jar***********
PROCESSING...................
**deleting old cache.....****
**cloning new repo***********
**building jar on docker*****
destroying docker maven image
my-maven-project
**coping build to prod********
*****************************
******Building Docker********
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 31B done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for docker.io/library/openjdk:latest
#3 DONE 0.0s

#4 [internal] load build context
#4 transferring context: 2.78kB done
#4 DONE 0.0s

#5 [1/3] FROM docker.io/library/openjdk
#5 CACHED

#6 [2/3] COPY rashmika.jar /usr/src/myapp/app.jar
#6 DONE 0.1s

#7 [3/3] WORKDIR /usr/src/myapp
#7 DONE 0.2s

#8 exporting to image
#8 exporting layers

Use 'docker scan' to run Snyk tests against images to find vulnerabilities and learn how to fix them
#8 exporting layers 1.0s done
#8 writing image sha256:66575981a383b0c8c628b90aa09438e7aa78fd42bce4cfb80803c6adb5ed11ec done
#8 naming to docker.io/library/java-app:jenkins-ssh_remote-29 done
#8 DONE 1.0s
*****************************
Sending image to the repo****
The push refers to repository [20.1.190.133:5000/rashmika_manawadu]
5f70bf18a086: Preparing
9a5ab40f1cce: Preparing
af156afd9124: Preparing
9c981436b96c: Preparing
847f66a69f5a: Preparing
9c981436b96c: Layer already exists
5f70bf18a086: Layer already exists
af156afd9124: Layer already exists
847f66a69f5a: Layer already exists
9a5ab40f1cce: Pushed
29: digest: sha256:67fc64f95af47fae943a9faaf085796393caec035fe381394104b10029626d39 size: 1368
*****************************
**Cleaning up images*********
Untagged: java-app:jenkins-ssh_remote-29
Untagged: 20.1.190.133:5000/rashmika_manawadu:29
Untagged: 20.1.190.133:5000/rashmika_manawadu@sha256:67fc64f95af47fae943a9faaf085796393caec035fe381394104b10029626d39
Deleted: sha256:66575981a383b0c8c628b90aa09438e7aa78fd42bce4cfb80803c6adb5ed11ec
******************************
******Completed**************

[SSH] completed
[SSH] exit-status: 0

Finished: SUCCESS
