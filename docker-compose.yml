version: '3'
services:
  jenkins-ansible:
    container_name: jenkins-ansible
    image: jenkins-ansible
    build:
      context: jenkins-ansible    
    ports:
      - "8080:8080"
    volumes:
      - $PWD/jenkins_home:/var/jenkins_home
    networks:
      - net
  remote_ubuntu:
    container_name: remote_ubuntu
    image: new_remote_ubuntu
    build:
      context: centos7
    networks:
      - net
  db_host:
    container_name: my_sql_db
    image: mysql:5.7
    environment:
      - "MYSQL_ROOT_PASSWORD=1234"
    volumes:
      - $PWD/db_data:/var/lib/mysql
    networks:
      - net 
  web-jenkins:
    container_name: nginx-rashmika
    image: ansible-rashmika
    build:
      context: web
    ports:
      - "3000:80"
    networks:
      - net
  phpmyadmin:
    depends_on:
      - db_host
    container_name: phpmyadmin
    image: phpmyadmin/phpmyadmin
    ports:
      - '8081:80'
    environment:
      PMA_HOST: db_host
      MYSQL_ROOT_PASSWORD: rashmika
  php-nginx:
    container_name: php-nginx
    image: existenz/webstack:8.1
    ports:
      - "80:80"
    networks:
      - net
  git:
    container_name: git-server
    image: 'gitlab/gitlab-ce:latest'
    hostname: 'gitlab.example.com'
    ports:
      - '8090:80'
    volumes:
      - '/srv/gitlab/config:/etc/gitlab'
      - '/srv/gitlab/logs:/var/log/gitlab'
      - '/srv/gitlab/data:/var/opt/gitlab'
    networks:
      - net
  my-pc:
    container_name: my-firefox
    image: jlesage/firefox
    ports:
      - "5800:5800"
    networks:
      - net
  tomcat-web:
    image: tomcat:9.0
    depends_on:
      - db_host
    container_name: tomcat-web
    volumes:
      - $PWD/tomcat:/usr/local/tomcat/webapps
    environment:
      MYSQL_ROOT_PASSWORD: rashmika
      MYSQL_DATABASE: inbay
      MYSQL_USER: root
      MYSQL_PASSWORD: rashmika
    ports:
      - "8888:8080"
    networks:
      - net
  docker-host:
    container_name: docker-host
    image: docker-host
    build:
      context: docker_host
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - net
  docker-registry:
    image: registry:2
    container_name: docker-registry
    ports:
      - "5000:5000"
    volumes:
      - $PWD/registry:/var/lib/registry
    networks:
      - net
  docker-registry-ui:
    image: konradkleine/docker-registry-frontend:v2
    container_name: docker-registry-ui
    ports:
      - "9090:80"
    environment:
        ENV_DOCKER_REGISTRY_HOST: docker-registry
        ENV_DOCKER_REGISTRY_PORT: 5000
    networks:
      - net    
networks:
  net:


